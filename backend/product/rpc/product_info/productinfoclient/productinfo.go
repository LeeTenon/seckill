// Code generated by goctl. DO NOT EDIT!
// Source: product_info.proto

package productinfoclient

import (
	"context"

	"Tstore/backend/product/rpc/product_info/product_info"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DetailReq      = product_info.DetailReq
	DetailResp     = product_info.DetailResp
	ListReq        = product_info.ListReq
	ListResp       = product_info.ListResp
	ProductProfile = product_info.ProductProfile

	ProductInfo interface {
		//  获取商品列表
		GetList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
		//  获取商品详情
		GetDetail(ctx context.Context, in *DetailReq, opts ...grpc.CallOption) (*DetailResp, error)
	}

	defaultProductInfo struct {
		cli zrpc.Client
	}
)

func NewProductInfo(cli zrpc.Client) ProductInfo {
	return &defaultProductInfo{
		cli: cli,
	}
}

//  获取商品列表
func (m *defaultProductInfo) GetList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := product_info.NewProductInfoClient(m.cli.Conn())
	return client.GetList(ctx, in, opts...)
}

//  获取商品详情
func (m *defaultProductInfo) GetDetail(ctx context.Context, in *DetailReq, opts ...grpc.CallOption) (*DetailResp, error) {
	client := product_info.NewProductInfoClient(m.cli.Conn())
	return client.GetDetail(ctx, in, opts...)
}
